/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.Messages;
import com.userstatus;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import model.db;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Lasitha Ranawaka
 */
public class downPayment extends javax.swing.JFrame {

    /**
     * Creates new form downPayment
     */
    public downPayment() {
        initComponents();
        txtadmissionno.grabFocus();
        loadinvoiceno();
        setExtendedState(MAXIMIZED_BOTH);

    }

    downPayment(String text) {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        txttotal.grabFocus();
        txtadmissionno.setText(text);
        loadotherdetails();
        loaddetailsdownpayment();
        lblmessage();
        loadtbl();
        loadinvoiceno();
        loadintroducer();
        loadintroducerdiscount();

    }
    int downpayid = 0;
    int releventdownid = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtadmissionno = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtpay = new javax.swing.JTextField();
        txttotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbreason = new javax.swing.JComboBox();
        cmbpaymentcategory = new javax.swing.JComboBox();
        txtdate = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtclasses = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtUpdateFullAmount = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtintroduceradmissionno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtintroducerdiscount = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cmbreasonsecond = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        txttotsecond = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cmbpaymentcatsecond = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        txtbalance = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtpaysecond = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        lblstatus = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtdiscount = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Payments");
        jLabel1.setOpaque(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Down Payments", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Find by"));

        txtadmissionno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtadmissionnoActionPerformed(evt);
            }
        });
        txtadmissionno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtadmissionnoKeyPressed(evt);
            }
        });

        jLabel8.setText("Admission no");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txtadmissionno, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtadmissionno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setText("Invoice No");

        txtid.setEditable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Sumbit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("Full Amount");

        txtpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpayActionPerformed(evt);
            }
        });

        txttotal.setForeground(new java.awt.Color(255, 255, 0));
        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });
        txttotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttotalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttotalKeyReleased(evt);
            }
        });

        jLabel7.setText("Date");

        cmbreason.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Advance", "Stampfees", "Bill Payments" }));
        cmbreason.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbreasonKeyPressed(evt);
            }
        });

        cmbpaymentcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit", "Cheque" }));
        cmbpaymentcategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbpaymentcategoryKeyPressed(evt);
            }
        });

        jLabel11.setText("Payment Category");

        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
        });

        jLabel17.setText("Payment");

        jLabel10.setText("Classes");

        jLabel9.setText("Name");

        jLabel6.setText("Reason for Pay");

        jLabel19.setText("Update Full Amount");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtclasses, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cmbpaymentcategory, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtpay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbreason, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(txtUpdateFullAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtclasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbreason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cmbpaymentcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addComponent(txtUpdateFullAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Introducer Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12), new java.awt.Color(0, 204, 51))); // NOI18N

        jLabel2.setText("Admission No");

        txtintroduceradmissionno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtintroduceradmissionnoActionPerformed(evt);
            }
        });

        jLabel5.setText("Discount");

        txtintroducerdiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtintroducerdiscountActionPerformed(evt);
            }
        });
        txtintroducerdiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtintroducerdiscountKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(txtintroduceradmissionno, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addComponent(txtintroducerdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtintroducerdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtintroduceradmissionno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(121, 121, 121)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Up to 2nd Payments", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel12.setText("Reason for Pay");

        cmbreasonsecond.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Advance", "Stampfees", "Bill Payments" }));
        cmbreasonsecond.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbreasonsecondKeyPressed(evt);
            }
        });

        jLabel13.setText("Total");

        txttotsecond.setEditable(false);

        jLabel14.setText("Payment Category");

        cmbpaymentcatsecond.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit", "Cheque" }));
        cmbpaymentcatsecond.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbpaymentcatsecondKeyPressed(evt);
            }
        });

        jLabel15.setText("Balnce");

        txtbalance.setEditable(false);

        jLabel16.setText("Payment");

        txtpaysecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpaysecondActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Date", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbl);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblstatus.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblstatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel18.setForeground(new java.awt.Color(255, 255, 0));
        jLabel18.setText("Discount");

        txtdiscount.setEditable(false);
        txtdiscount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtdiscount.setForeground(new java.awt.Color(255, 255, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txttotsecond)
                                    .addComponent(cmbreasonsecond, 0, 138, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtpaysecond)
                                    .addComponent(cmbpaymentcatsecond, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtdiscount, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(txtbalance, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(txttotsecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cmbreasonsecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cmbpaymentcatsecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtbalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtpaysecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtadmissionnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtadmissionnoActionPerformed

    }//GEN-LAST:event_txtadmissionnoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (txtadmissionno.getText().isEmpty()) {
            com.Messages.errorjoption("Fill the Admission No!");
            txtadmissionno.grabFocus();

        } else if (cmbreason.getSelectedIndex() == 0) {
            com.Messages.errorjoption("Select Pay Type!");
            cmbreason.grabFocus();

        } else {

            submit1();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (cmbreasonsecond.getSelectedIndex() == 0) {
            Messages.errorjoption("Select Payment Type");
            cmbreasonsecond.grabFocus();
        } else if (txtpaysecond.getText().isEmpty()) {
            Messages.errorjoption("Enter Amount");
            txtpaysecond.grabFocus();
        } else {
            submit2();

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txttotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttotalKeyReleased
        com.Validation.validatedouble(txttotal);

    }//GEN-LAST:event_txttotalKeyReleased

    private void txtpaysecondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpaysecondActionPerformed
        if (cmbreasonsecond.getSelectedIndex() == 0) {
            Messages.errorjoption("Select Payment Type");
            cmbreasonsecond.grabFocus();
        } else if (txtpaysecond.getText().isEmpty()) {
            Messages.errorjoption("Enter Amount");
            txtpaysecond.grabFocus();

        } else {
            submit2();

        }
    }//GEN-LAST:event_txtpaysecondActionPerformed

    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed

    }//GEN-LAST:event_txttotalActionPerformed

    private void txtpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpayActionPerformed
        cmbpaymentcategory.grabFocus();
    }//GEN-LAST:event_txtpayActionPerformed

    private void cmbpaymentcategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbpaymentcategoryKeyPressed
        if (evt.getKeyCode() == 10) {
            txtintroduceradmissionno.grabFocus();
        }
    }//GEN-LAST:event_cmbpaymentcategoryKeyPressed

    private void cmbreasonsecondKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbreasonsecondKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbpaymentcatsecond.grabFocus();

        }
    }//GEN-LAST:event_cmbreasonsecondKeyPressed

    private void cmbpaymentcatsecondKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbpaymentcatsecondKeyPressed
        if (evt.getKeyCode() == 10) {
            txtpaysecond.grabFocus();

        }
    }//GEN-LAST:event_cmbpaymentcatsecondKeyPressed

    private void txtintroduceradmissionnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtintroduceradmissionnoActionPerformed
        txtintroducerdiscount.grabFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txtintroduceradmissionnoActionPerformed

    private void txtintroducerdiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtintroducerdiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtintroducerdiscountActionPerformed

    private void txtintroducerdiscountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintroducerdiscountKeyPressed
        if (evt.getKeyCode() == 10) {
            if (txtadmissionno.getText().isEmpty()) {
                com.Messages.errorjoption("Fill the Admission No!");
                txtadmissionno.grabFocus();

            } else {

                submit1();
            }

        }
    }//GEN-LAST:event_txtintroducerdiscountKeyPressed

    private void cmbreasonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbreasonKeyPressed
        if (evt.getKeyCode() == 10) {
            txtpay.grabFocus();

        }
    }//GEN-LAST:event_cmbreasonKeyPressed

    private void txttotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttotalKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbreason.grabFocus();

        }
    }//GEN-LAST:event_txttotalKeyPressed

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtclasses.grabFocus();

        }
    }//GEN-LAST:event_txtnameKeyPressed

    private void txtadmissionnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtadmissionnoKeyPressed
        if (evt.getKeyCode() == 10) {
            clearall();
            loaddetailsdownpayment();
            loadotherdetails();
            loadtbl();
            lblmessage();
            loadintroducerdiscount();
            loadintroducer();
            cmbreasonsecond.grabFocus();

        }


    }//GEN-LAST:event_txtadmissionnoKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int down_id = 0;
        int total = Integer.parseInt(txttotal.getText());
        int updatetotal = Integer.parseInt(txtUpdateFullAmount.getText());
        int balance = Integer.parseInt(txtbalance.getText());
        int balance2 =0;
        int dif = 0;
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "downpayment.id\n"
                    + "FROM\n"
                    + "downpayment\n"
                    + "WHERE\n"
                    + "downpayment.admissonno = '" + txtadmissionno.getText() + "'");

            if (rs.next()) {
                down_id = rs.getInt(1);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        try {

            if (updatetotal > total) {
                dif = updatetotal - balance;
                System.out.println(dif);
                balance2 = balance + dif;
                System.out.println("balance"+balance2);
            } else {
                balance2 = balance - dif;

            }
            model.db.putData("update downpayment set total='" + updatetotal + "',balance= '" + balance2 + "' where id= '" + down_id + "'    ");
            com.Messages.normaljoption("Amount Updated!");
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(downPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(downPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(downPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(downPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new downPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbpaymentcategory;
    private javax.swing.JComboBox cmbpaymentcatsecond;
    private javax.swing.JComboBox cmbreason;
    private javax.swing.JComboBox cmbreasonsecond;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblstatus;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtUpdateFullAmount;
    private javax.swing.JTextField txtadmissionno;
    private javax.swing.JTextField txtbalance;
    private javax.swing.JTextField txtclasses;
    private javax.swing.JFormattedTextField txtdate;
    private javax.swing.JTextField txtdiscount;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtintroduceradmissionno;
    private javax.swing.JTextField txtintroducerdiscount;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtpay;
    private javax.swing.JTextField txtpaysecond;
    private javax.swing.JTextField txttotal;
    private javax.swing.JTextField txttotsecond;
    // End of variables declaration//GEN-END:variables

    private void loadotherdetails() {
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "uniquecustomerdetails.`namewithinitial`,\n"
                    + "customer_register.vehicle_class,\n"
                    + "customer_register.reg_date\n"
                    + "FROM\n"
                    + "customer_register ,\n"
                    + "uniquecustomerdetails\n"
                    + "WHERE\n"
                    + "customer_register.uniqueCustomerDetails_id = uniquecustomerdetails.id AND\n"
                    + "customer_register.admission_no = '" + txtadmissionno.getText() + "'");
            if (rs.next()) {
                txtname.setText(rs.getString(1));
                txtclasses.setText(rs.getString(2));
                txtdate.setText(rs.getString(3));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loaddetailsdownpayment() {
//        if (!txtid.getText().isEmpty()) {
//
//            txttotal.setEnabled(false);
//            txtpay.setEnabled(false);
//        }

        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "downpayment.admissonno,\n"
                    + "downpayment.total,\n"
                    + "downpayment.balance,\n"
                    + "downpayment.`status`,\n"
                    + "uniquecustomerdetails.`namewithinitial`,\n"
                    + "customer_register.vehicle_class,\n"
                    + "customer_register.reg_date,\n"
                    + "uptosecondpayment.date,\n"
                    + "uptosecondpayment.reasonforpay,\n"
                    + "uptosecondpayment.payby,\n"
                    + "uptosecondpayment.amount,\n"
                    + "uptosecondpayment.`status`,\n"
                    + "uptosecondpayment.id as invoiceno\n"
                    + "FROM\n"
                    + "downpayment ,\n"
                    + "customer_register ,\n"
                    + "uniquecustomerdetails ,\n"
                    + "uptosecondpayment\n"
                    + "WHERE\n"
                    + "downpayment.customer_register_id = customer_register.id AND\n"
                    + "customer_register.uniqueCustomerDetails_id = uniquecustomerdetails.id AND\n"
                    + "downpayment.id = uptosecondpayment.downpayment_id AND\n"
                    //                    + "uptosecondpayment.`status` = 'downpaid' AND\n"
                    + "downpayment.admissonno = '" + txtadmissionno.getText() + "'");
            if (rs.next()) {
                txtname.setText(rs.getString(5));
                txtclasses.setText(rs.getString(6));
                txtdate.setText(rs.getString(7));
                txtid.setText(rs.getString(13));
                cmbreason.setSelectedItem(rs.getString(9));
                cmbpaymentcategory.setSelectedItem(rs.getString(10));
                txttotal.setText(rs.getString(2));
                txttotsecond.setText(rs.getString(2));
                txtpay.setText(rs.getString(11));
                txtbalance.setText(rs.getString(3));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void lblmessage() {
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "downpayment.balance\n"
                    + "FROM\n"
                    + "downpayment\n"
                    + "WHERE\n"
                    + "downpayment.admissonno = '" + txtadmissionno.getText() + "' ");
            if (rs.next()) {
                double bal = rs.getDouble(1);
                if (bal <= 0) {
                    lblstatus.setText("Payments are Completed!");
                    lblstatus.setForeground(Color.green);

                } else if (bal > 0) {
                    lblstatus.setText("Payments are not Completed!");
                    lblstatus.setForeground(Color.red);

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadtbl() {
        DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
        dtm.setRowCount(0);
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "uptosecondpayment.id,\n"
                    + "uptosecondpayment.date,\n"
                    + "uptosecondpayment.amount\n"
                    + "FROM\n"
                    + "uptosecondpayment ,\n"
                    + "downpayment\n"
                    + "WHERE\n"
                    + "uptosecondpayment.downpayment_id = downpayment.id AND\n"
                    + "downpayment.admissonno = '" + txtadmissionno.getText() + "' order by uptosecondpayment.id");
            while (rs.next()) {

                int id = rs.getInt(1);
                String date = rs.getString(2);
                String amount = rs.getString(3);

                Object o[] = {id, date, amount};
                dtm.addRow(o);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void submit2() {

        ////find max down pay id
        try {
            ResultSet rs = model.db.getData("SELECT MAX(id) FROM downpayment");
            if (rs.next()) {
                downpayid = rs.getInt(1);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        /////////////////////////////////////////////////////////
        ///find the relevent downid
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "downpayment.id\n"
                    + "FROM\n"
                    + "downpayment\n"
                    + "WHERE\n"
                    + "downpayment.admissonno = '" + txtadmissionno.getText() + "'");

            if (rs.next()) {
                releventdownid = rs.getInt(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //////////////////////////////////////////////////////

        if (!txtid.getText().isEmpty()) {

            try {
                model.db.putData("INSERT INTO uptosecondpayment(downpayment_id,date,reasonforpay,payby,amount,status)values"
                        + "('" + releventdownid + "',NOW(),'" + cmbreasonsecond.getSelectedItem() + "',"
                        + "'" + cmbpaymentcatsecond.getSelectedItem() + "','" + txtpaysecond.getText().trim() + "','" + "UptoSecondPay" + "')");

                model.db.putData("UPDATE downpayment set balance = balance - '" + txtpaysecond.getText().trim() + "' "
                        + "where id= '" + releventdownid + "'");
                //log
                model.db.putData("INSERT INTO log(date,description,username)values(NOW(),'" + "uptosecondpay" + "',"
                        + "'" + userstatus.LodUser + "')");

                ////////////////////////////////////////////////////////////////////////
                Messages.normaljoption("Data Saved!");
                printinvoiceuptosecnd();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
        loadtbl();

        loaddetailsdownpayment();
        loadotherdetails();
        lblmessage();
        loadinvoiceno();
        clearuptosecond();

    }
    int customer_register_id = 0;

    private void submit1() {
        //find the customer reg id from admission no
        // int customer_register_id = 0;
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "customer_register.id\n"
                    + "FROM\n"
                    + "customer_register\n"
                    + "WHERE\n"
                    + "customer_register.admission_no = '" + txtadmissionno.getText() + "'");

            if (rs.next()) {
                customer_register_id = rs.getInt(1);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        ///////////////////////////////////////////

        /// find balance
        double tot = Double.parseDouble(txttotal.getText());
        double pay = Double.parseDouble(txtpay.getText());
        double bal = tot - pay;

        /////////////////////////////////////
        if (txtadmissionno.getText().isEmpty()) {
            com.Messages.errorjoption("Fill the Admission No!");
            txtadmissionno.grabFocus();

        } else {
            if (txtid.getText().isEmpty()) {
                try {
                    db.putData("INSERT INTO downpayment (customer_register_id,admissonno,total,"
                            + "balance,status)values('" + customer_register_id + "','" + txtadmissionno.getText() + "',"
                            + "'" + txttotal.getText().trim() + "','" + bal + "','" + "downpaid" + "')");

                    ////find max down pay id
                    try {
                        ResultSet rs = model.db.getData("SELECT MAX(id) FROM downpayment");
                        if (rs.next()) {
                            downpayid = rs.getInt(1);

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    /////////////////////////////////////////////////////////
                    db.putData("INSERT INTO uptosecondpayment(downpayment_id,date,reasonforpay,payby,amount,status)values"
                            + "('" + downpayid + "',NOW(),'" + cmbreason.getSelectedItem() + "',"
                            + "'" + cmbpaymentcategory.getSelectedItem() + "','" + txtpay.getText().trim() + "',"
                            + "'" + "downpaid" + "')");

                    //log
                    model.db.putData("INSERT INTO log(date,description,username)values(NOW(),'" + "Downpaid" + "',"
                            + "'" + userstatus.LodUser + "')");

                    ////////////////////////////////////////////////////////////////////////
                    //insert introducer
                    db.putData("INSERT INTO introducer(newer,introducer,discount)values('" + txtadmissionno.getText() + "',"
                            + "'" + txtintroduceradmissionno.getText() + "','" + txtintroducerdiscount.getText() + "')");

                    ////////////////////////////////////////////////////////////
                    ////deduct balance
                    model.db.putData("UPDATE downpayment set balance=balance- '" + txtintroducerdiscount.getText() + "'"
                            + " where admissonno='" + txtintroduceradmissionno.getText() + "' ");
                    ///////////////////////////////////////////////////////
                } catch (Exception e) {
                    e.printStackTrace();

                }

                Messages.normaljoption("Data Saved!");
                printinvoice();

            } else {
                //  new loginfordownpayments(this, false).setVisible(true);
//                new loginfordownpayments(this, false, this).setVisible(true);

            }

        }

        loadtbl();
        loaddetailsdownpayment();
        loadinvoiceno();

    }

    private void printinvoice() {

        try {
            //JRTableModelDataSource dataSource;
            // dataSource = new JRTableModelDataSource(tbl_Gin.getModel());
            //String reportSource = "c:\\reports\\viewInvoice.jrxml";
            String reportSource = "src/reports/invoice.jrxml";
            Map<String, Object> params = new HashMap<String, Object>();

            params.put("invoiceid", String.valueOf(invoiceno));
            params.put("admissionno", String.valueOf(txtadmissionno.getText()));
            params.put("name", String.valueOf(txtname.getText()));
            params.put("class", String.valueOf(txtclasses.getText()));
            params.put("reason", String.valueOf(cmbreason.getSelectedItem()));
            params.put("tot", String.valueOf(txttotal.getText()));
            params.put("paid", String.valueOf(txtpay.getText()));
            params.put("user", String.valueOf(com.userstatus.LodUser));
            params.put("category", String.valueOf(cmbpaymentcategory.getSelectedItem()));

            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params);

            //JasperViewer.viewReport(jasperPrint, false);
            JasperPrintManager.printReport(jasperPrint, true);
            // this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int invoiceno = 0;

    private void loadinvoiceno() {
        ////find max down pay id

        try {
            ResultSet rs = model.db.getData("SELECT MAX(id) FROM uptosecondpayment");
            if (rs.next()) {
                invoiceno = rs.getInt(1) + 1;
                System.out.println(invoiceno);
                //   txtid.setText("" + invoiceno);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //////////////////////////////////////////////////////
    }

    private void printinvoiceuptosecnd() {
        try {
            //JRTableModelDataSource dataSource;
            // dataSource = new JRTableModelDataSource(tbl_Gin.getModel());
            //String reportSource = "c:\\reports\\viewInvoice.jrxml";
            String reportSource = "src/reports/invoicesecond.jrxml";
            Map<String, Object> params = new HashMap<String, Object>();

            params.put("invoiceid", String.valueOf(invoiceno));
            params.put("admissionno", String.valueOf(txtadmissionno.getText()));
            params.put("name", String.valueOf(txtname.getText()));
            params.put("class", String.valueOf(txtclasses.getText()));
            params.put("reason", String.valueOf(cmbreasonsecond.getSelectedItem()));
            // params.put("tot", String.valueOf(txttotal.getText()));
            params.put("paid", String.valueOf(txtpaysecond.getText()));
            params.put("user", String.valueOf(com.userstatus.LodUser));
            params.put("category", String.valueOf(cmbpaymentcatsecond.getSelectedItem()));

            JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, params);

            JasperViewer.viewReport(jasperPrint, false);
            JasperPrintManager.printReport(jasperPrint, true);
            // this.dispose();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearuptosecond() {
        cmbreasonsecond.setSelectedIndex(0);
        txtpaysecond.setText("");

    }

    private void loadintroducerdiscount() {
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "introducer.discount\n"
                    + "FROM\n"
                    + "introducer\n"
                    + "WHERE\n"
                    + "introducer.introducer = '" + txtadmissionno.getText() + "'");
            if (rs.next()) {
                txtdiscount.setText(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearall() {
        txtbalance.setText("");
        txtclasses.setText("");
        txtdate.setText("");
        txtdiscount.setText("");
        txtid.setText("");
        txtintroduceradmissionno.setText("");
        txtintroducerdiscount.setText("");
        txtname.setText("");
        txtpay.setText("");
        txtpaysecond.setText("");
        txttotal.setText("");
        txttotsecond.setText("");
        cmbpaymentcategory.setSelectedIndex(0);
        cmbpaymentcatsecond.setSelectedIndex(0);
        cmbreason.setSelectedIndex(0);
        cmbreasonsecond.setSelectedIndex(0);

    }

    private void loadintroducer() {
        try {
            ResultSet rs = model.db.getData("SELECT\n"
                    + "introducer.introducer,\n"
                    + "introducer.discount\n"
                    + "FROM\n"
                    + "introducer\n"
                    + "WHERE\n"
                    + "introducer.newer = '" + txtadmissionno.getText() + "'");
            if (rs.next()) {
                txtintroduceradmissionno.setText(rs.getString(1));
                txtintroducerdiscount.setText(rs.getString(2));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void UpdateDownPaymentFullAmount() {

        try {
            System.out.println(txtadmissionno.getText());
            System.out.println("2");
//           
            model.db.putData("UPDATE downpayment set total='" + txttotal.getText().trim() + "'"
                    + " where admissonno='" + txtadmissionno.getText().trim() + "' and customer_register_id='" + customer_register_id + "' ");

            model.db.putData("INSERT INTO log(date,description,username)values(NOW(),'" + "total update" + "',"
                    + "'" + userstatus.LodUser + "')");

        } catch (Exception e) {
            e.printStackTrace();
        }

        Messages.normaljoption("Total Updated!");
    }

    public void shotkey(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == 112) {
            cmbreasonsecond.grabFocus();
        }
        if (evt.getKeyCode() == 113) {

        }
        if (evt.getKeyCode() == 114) {

        }
        if (evt.getKeyCode() == 33) {

        }
        if (evt.getKeyCode() == 34) {

        }
        if (evt.getKeyCode() == 123) {

        }
        if (evt.getKeyCode() == 117) {

        }
        if (evt.getKeyCode() == 118) {

        }
    }

}
